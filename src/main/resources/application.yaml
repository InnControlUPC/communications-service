server:
  port: 0

spring:
  application:
    name: communications-service
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: com.github.inncontrol.shared.infrastructure.persistence.jpa.configuration.strategy.SnakeCaseWithPluralizedTablePhysicalNamingStrategy
    open-in-view: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: inncontrol-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5892/communications_db}
    username: ${POSTGRES_USER:communications_user}
    password: ${POSTGRES_PASSWORD:communications_password}
    driver-class-name: org.postgresql.Driver


springdoc:
  api-docs:
    path: /v1/api-docs

eureka:
  instance:
    instance-id: ${spring.application.name}:${random.value}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}